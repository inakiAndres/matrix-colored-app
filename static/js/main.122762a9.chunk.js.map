{"version":3,"sources":["components/Game.js","components/Gameover.js","components/CountDown.js","components/LeaderBoard-styles.js","utils/storageManager.js","components/LeaderBoard.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","createUseStyles","cards","width","height","margin","display","gridGap","gapSize","gridTemplateColumns","level","card","backgroundColor","color","principalColorSatAndLum","cardDifferent","saturation","lightness","Game","onBgColor","onCardClicked","useState","setColor","setSaturation","setLightness","useEffect","newColor","Math","floor","random","maxVariant","diffVariant","randomColors","matrixSize","nDifferent","checkResult","tileIndex","classes","className","Array","map","_","onClick","defaultProps","gameOver","fontSize","Gameover","title","isLastLevel","countDown","marginTop","CountDown","time","onCountDownEnds","isPlaying","duration","colors","onComplete","space","marginLeft","marginRight","column","minWidth","padding","paddingLeft","paddingRight","paddingTop","paddingBottom","input","border","textAlign","buttons","fontFamily","boxShadow","firstClassified","justifyContent","marginBottom","secondClassified","thirdClassified","defaultClassified","getArray","arrayName","thisArray","fetchArrayObject","localStorage","getItem","JSON","parse","LeaderBoard","onRestart","wantToSave","setWantToSave","scores","onSubmit","e","arrayItem","existingArray","push","sort","a","b","length","splice","setItem","stringify","pushArrayItem","nick","target","name","value","type","placeholder","maxLength","style","borderColor","score","index","0","1","2","App","setLevel","bgcolor","setBgColor","gameState","setGameState","playing","levelUp","lost","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.122762a9.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { createUseStyles } from \"react-jss\";\r\n\r\nconst useStyles = createUseStyles({\r\n  cards: {\r\n    width: \"40vw\",\r\n    height: \"40vw\",\r\n    margin: \"0 auto\",\r\n    display: \"grid\",\r\n    gridGap: ({ gapSize }) => `${gapSize}rem`,\r\n    gridTemplateColumns: ({ level }) => `repeat(${level}, 1fr)`,\r\n    \"@media screen and (max-width: 575.98px)\": {\r\n      width: \"40vh\",\r\n      height: \"40vh\",\r\n      gridGap: ({ gapSize }) => `${gapSize / 2.5}rem`,\r\n    },\r\n  },\r\n  card: {\r\n    backgroundColor: ({ color, principalColorSatAndLum }) =>\r\n      `hsl(${color}, ${principalColorSatAndLum}%, ${principalColorSatAndLum}%)`,\r\n    color: \"white\",\r\n  },\r\n  cardDifferent: {\r\n    backgroundColor: ({ color, saturation, lightness }) =>\r\n      `hsl(${color}, ${saturation}%, ${lightness}%)`,\r\n    color: \"white\",\r\n  },\r\n});\r\n\r\nconst Game = ({ level, onBgColor, onCardClicked }) => {\r\n  //Color region\r\n  const principalColorSatAndLum = 50;\r\n  const [color, setColor] = useState();\r\n  const [saturation, setSaturation] = useState(30);\r\n  const [lightness, setLightness] = useState(30);\r\n\r\n  useEffect(() => {\r\n    const randomColors = () => {\r\n      const newColor = Math.floor(Math.random() * 360);\r\n      setColor(newColor);\r\n      if (newColor + 180 <= 360) onBgColor(newColor + 180);\r\n      else onBgColor(newColor - 180);\r\n      const maxVariant = 20 - level / 2;\r\n      const diffVariant = Math.floor(Math.random() * maxVariant);\r\n      setSaturation(principalColorSatAndLum - (maxVariant - diffVariant));\r\n      setLightness(principalColorSatAndLum - diffVariant);\r\n    };\r\n    randomColors();\r\n  }, [level]);\r\n\r\n  //Size and gameplay region\r\n  const matrixSize = level * level;\r\n  const nDifferent = Math.floor(Math.random() * matrixSize);\r\n\r\n  const checkResult = (tileIndex) => () => {\r\n    tileIndex === nDifferent ? onCardClicked(\"levelUp\") : onCardClicked(\"lost\");\r\n  };\r\n  const gapSize = 1 - 0.02 * level;\r\n  const classes = useStyles({\r\n    level,\r\n    color,\r\n    principalColorSatAndLum,\r\n    saturation,\r\n    lightness,\r\n    gapSize,\r\n  });\r\n\r\n  return (\r\n    <div className={classes.cards}>\r\n      {[...Array(matrixSize)].map((_, tileIndex) =>\r\n        tileIndex !== nDifferent ? (\r\n          <div\r\n            className={classes.card}\r\n            key={tileIndex}\r\n            onClick={checkResult(tileIndex)}\r\n          ></div>\r\n        ) : (\r\n          <div\r\n            className={classes.cardDifferent}\r\n            key={tileIndex}\r\n            onClick={checkResult(tileIndex)}\r\n          ></div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nGame.propTypes = {\r\n  level: PropTypes.number.isRequired,\r\n  onBgColor: PropTypes.func.isRequired,\r\n  onCardClicked: PropTypes.func.isRequired,\r\n};\r\n\r\nGame.defaultProps = {\r\n  level: 2,\r\n};\r\n\r\nexport default Game;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { createUseStyles } from \"react-jss\";\r\n\r\nconst useStyles = createUseStyles({\r\n  gameOver: {\r\n    fontSize: \"26px\",\r\n    \"@media screen and (max-width: 575.98px)\": {\r\n      fontSize: \"22px\",\r\n    },\r\n  },\r\n});\r\n\r\nconst Gameover = ({ level, title, isLastLevel }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.gameOver}>\r\n      {title}\r\n      {isLastLevel ? (\r\n        <div>You have reached to the last level </div>\r\n      ) : (\r\n        <div>You have reached the level: {level - 1} </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nGameover.propTypes = {\r\n  level: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  isLastLevel: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Gameover;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport { createUseStyles } from \"react-jss\";\r\nconst useStyles = createUseStyles({\r\n  countDown: { marginTop: \"20px\" },\r\n});\r\nconst CountDown = ({ time, onCountDownEnds }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.countDown}>\r\n      <CountdownCircleTimer\r\n        isPlaying\r\n        duration={time}\r\n        colors={[[\"#004777\", 0.33], [\"#F7B801\", 0.33], [\"#A30000\"]]}\r\n        onComplete={onCountDownEnds}\r\n      >\r\n        {() => \"That's correct!!\"}\r\n      </CountdownCircleTimer>\r\n    </div>\r\n  );\r\n};\r\n\r\nCountDown.propTypes = {\r\n  time: PropTypes.number.isRequired,\r\n  onCountDownEnds: PropTypes.func.isRequired,\r\n};\r\n\r\nCountDown.defaultProps = {\r\n  time: 1,\r\n};\r\n\r\nexport default CountDown;\r\n","import { createUseStyles } from \"react-jss\";\r\n\r\nconst useStyles = createUseStyles({\r\n  space: {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    marginTop: \"10px\",\r\n  },\r\n  column: {\r\n    minWidth: \"25px\",\r\n    padding: 10,\r\n    \"@media screen and (max-width: 575.98px)\": {\r\n      paddingLeft: 5,\r\n      paddingRight: 5,\r\n      paddingTop: 2.5,\r\n      paddingBottom: 2.5,\r\n    },\r\n  },\r\n  input: {\r\n    border: \"2px solid #555\",\r\n    backgroundColor: \"divansparent\",\r\n    width: \"50px\",\r\n    textAlign: \"center\",\r\n  },\r\n  buttons: {\r\n    margin: \"10px\",\r\n    border: \"1px solid\",\r\n    backgroundColor: \"divansparent\",\r\n    textAlign: \"center\",\r\n    fontFamily: \"Itim\",\r\n    boxShadow: \"0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0)\",\r\n  },\r\n  firstClassified: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    marginBottom: \"10px\",\r\n    backgroundColor: \"goldenrod\",\r\n    boxShadow: \"0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.16)\",\r\n  },\r\n  secondClassified: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    marginBottom: \"10px\",\r\n    backgroundColor: \"silver\",\r\n    boxShadow: \"0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.16)\",\r\n  },\r\n  thirdClassified: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    marginBottom: \"10px\",\r\n    backgroundColor: \"#cd7f32\",\r\n    boxShadow: \"0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.16)\",\r\n  },\r\n  defaultClassified: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    marginBottom: \"10px\",\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","export function getArray(arrayName) {\r\n  var thisArray = [];\r\n  var fetchArrayObject = localStorage.getItem(arrayName);\r\n  if (typeof fetchArrayObject !== \"undefined\") {\r\n    if (fetchArrayObject !== null) {\r\n      thisArray = JSON.parse(fetchArrayObject);\r\n    }\r\n  }\r\n  return thisArray;\r\n}\r\n\r\nexport function pushArrayItem(arrayName, arrayItem) {\r\n  var existingArray = getArray(arrayName);\r\n  existingArray.push(arrayItem);\r\n  existingArray = existingArray.sort((a, b) => {\r\n    return b.level - a.level;\r\n  });\r\n  if (existingArray.length > 10) {\r\n    existingArray = existingArray.splice(0, 10);\r\n  }\r\n  localStorage.setItem(arrayName, JSON.stringify(existingArray));\r\n}\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport useStyles from \"./LeaderBoard-styles\";\r\nimport { getArray, pushArrayItem } from \"../utils/storageManager\";\r\n\r\nconst LeaderBoard = ({ level, onRestart }) => {\r\n  const classes = useStyles();\r\n  const [wantToSave, setWantToSave] = useState(false);\r\n  const scores = getArray(\"scores\");\r\n  const setScore = (e) => {\r\n    const nick = e.target.name.value;\r\n    pushArrayItem(\"scores\", { nick, level: level - 1 });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {wantToSave ? (\r\n        <>\r\n          <div>Insert your initials here:</div>\r\n          <form onSubmit={setScore}>\r\n            <label>\r\n              <input\r\n                className={classes.input}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"_ _ _\"\r\n                maxLength=\"3\"\r\n              />\r\n            </label>\r\n            <input className={classes.buttons} type=\"submit\" value=\"Submit\" />\r\n          </form>\r\n        </>\r\n      ) : (\r\n        <div>\r\n          <div className={classes.space}>Do you want to save your score?</div>\r\n          <button\r\n            className={classes.buttons}\r\n            style={{ backgroundColor: \"hsl(120, 70%, 70%)\" }}\r\n            onClick={() => setWantToSave(true)}\r\n          >\r\n            Yes\r\n          </button>\r\n          <button\r\n            className={classes.buttons}\r\n            style={{ borderColor: \"red\" }}\r\n            onClick={onRestart}\r\n          >\r\n            No, restart the game\r\n          </button>\r\n        </div>\r\n      )}\r\n      <div className={classes.space}>LEADERBOARD</div>\r\n      <div className={classes.defaultClassified}>\r\n        <div className={classes.column}>Nickname</div>\r\n        <div className={classes.column}>Level</div>\r\n      </div>\r\n      {scores.map(\r\n        (score, index) =>\r\n          ({\r\n            0: (\r\n              <div className={classes.firstClassified} key={index}>\r\n                <div className={classes.column}>{score.nick}</div>\r\n                <div className={classes.column}>{score.level}</div>\r\n              </div>\r\n            ),\r\n            1: (\r\n              <div className={classes.secondClassified} key={index}>\r\n                <div className={classes.column}>{score.nick}</div>\r\n                <div className={classes.column}>{score.level}</div>\r\n              </div>\r\n            ),\r\n            2: (\r\n              <div className={classes.thirdClassified} key={index}>\r\n                <div className={classes.column}>{score.nick}</div>\r\n                <div className={classes.column}>{score.level}</div>\r\n              </div>\r\n            ),\r\n          }[index] || (\r\n            <div className={classes.defaultClassified} key={index}>\r\n              <div className={classes.column}>{score.nick}</div>\r\n              <div className={classes.column}>{score.level}</div>\r\n            </div>\r\n          ))\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nLeaderBoard.propTypes = {\r\n  level: PropTypes.number.isRequired,\r\n  onRestart: PropTypes.func.isRequired,\r\n};\r\n\r\nLeaderBoard.defaultProps = { level: 2 };\r\n\r\nexport default LeaderBoard;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Game from \"./components/Game\";\r\nimport Gameover from \"./components/Gameover\";\r\nimport CountDown from \"./components/CountDown\";\r\nimport LeaderBoard from \"./components/LeaderBoard\";\r\n\r\nfunction App() {\r\n  const [level, setLevel] = useState(2);\r\n  const [bgcolor, setBgColor] = useState();\r\n\r\n  const [gameState, setGameState] = useState(\"playing\");\r\n\r\n  const nextLevel = () => {\r\n    setLevel(level + 1);\r\n    setGameState(\"playing\");\r\n  };\r\n  const gameOver = () => {\r\n    setLevel(2);\r\n    setGameState(\"playing\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"App\"\r\n      style={{ backgroundColor: `hsl(${bgcolor}, 40%, 60%)` }}\r\n    >\r\n      <div className=\"title\">LEVEL {level - 1}</div>\r\n      <div className=\"Game\">\r\n        <div className=\"alignCenter\">\r\n          {{\r\n            playing: (\r\n              <Game\r\n                level={level}\r\n                onBgColor={setBgColor}\r\n                onCardClicked={setGameState}\r\n              />\r\n            ),\r\n            levelUp:\r\n              level <= 20 ? (\r\n                <CountDown time={1} onCountDownEnds={nextLevel} />\r\n              ) : (\r\n                <div className=\"gameEnd\">\r\n                  <Gameover\r\n                    level={level}\r\n                    title=\"YOU ARE THE BEST!\"\r\n                    isLastLevel={true}\r\n                  />\r\n                  <LeaderBoard level={level} onRestart={gameOver} />\r\n                </div>\r\n              ),\r\n            lost: (\r\n              <div className=\"gameEnd\">\r\n                <Gameover level={level} title=\"GAME OVER\" isLastLevel={false} />\r\n                <LeaderBoard level={level} onRestart={gameOver} />\r\n              </div>\r\n            ),\r\n          }[gameState] || (\r\n            <Game\r\n              level={level}\r\n              onBgColor={setBgColor}\r\n              onCardClicked={setGameState}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}